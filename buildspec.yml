version: 0.2
 
phases:
  install:
   runtime-versions:
      python: 3.10  # Replace with the Python version you need

   commands:
      - echo "Skipping yum update..."
      - pip install boto3
     

 
  pre_build:
    commands:
      - echo "version controller"
      - yum update -y
      - yum install jq -y
      - yum install zip -y
      - pip install requests
      - pip install ruamel.yaml
 
  build:
    commands:
      - echo "Source artifact reference:$CODEBUILD_SOURCE_VERSION"
      - echo "Running build commands for lab stages..."
      - mkdir build_artifacts
      - mvn clean package
      - cp target/hello-world-war-1.0.2.war build_artifacts/
      - cp target/hello-world-war-1.0.2.war .
      # - aws s3 cp $CICD_CONFIG_PATH . --recursive
      - echo "Downloading finished "

   
 
  post_build:
    commands:
      - echo "Extracting and assuming Deployer role for cross account"
      - param_name="role"
      - CROSS_ACCOUNT_S3_BUCKET_PATH="s3://test-matson"
      - DEPLOY_ROLE=$(aws ssm get-parameter --name $param_name --with-decryption | jq -r ".Parameter.Value")
      - role=$(aws sts assume-role --role-arn $DEPLOY_ROLE --role-session-name ohana-api-deployer-session)
      - KEY=$(echo $role | jq -r ".Credentials.AccessKeyId")
      - SECRET=$(echo $role | jq -r ".Credentials.SecretAccessKey")
      - TOKEN=$(echo $role | jq -r ".Credentials.SessionToken")
      - export AWS_ACCESS_KEY_ID=$KEY
      - export AWS_SESSION_TOKEN=$TOKEN
      - export AWS_SECRET_ACCESS_KEY=$SECRET
      - export AWS_DEFAULT_REGION=ap-south-1
      - echo "Zipping files for codedeploy "
      - DEPLOYMENT_PACKAGE_NAME="deployment-package-$(date +"%Y%m%d%H%M%S").zip"
      - sed -i "s|{{WAR_FILE_NAME}}|hello-world-war-1.0.2.war|g" appspec.yml
      - cat appspec.yml
      - zip -r $DEPLOYMENT_PACKAGE_NAME appspec.yml application_start.sh hello-world-war-1.0.2.war rapid7/
      - echo "Copying zipped files to cross-account S3 bucket which will be utilized for codedeploy"
      - aws s3 cp $DEPLOYMENT_PACKAGE_NAME $CROSS_ACCOUNT_S3_BUCKET_PATH/$DEPLOYMENT_PACKAGE_NAME
      - aws sts get-caller-identity
      - echo "Codedeploy deployment started"
      - aws deploy create-deployment --application-name test --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name test-dg --description "Deployment Description" --s3-location bucket=testsagar-123,bundleType=zip,key=$DEPLOYMENT_PACKAGE_NAME --region us-east-1
      - deploymentId=$(aws deploy list-deployments --application-name test --deployment-group-name test-dg --region us-east-1 --query 'deployments[0]' --output text)
      - echo "Waiting for deployment to complete..."
      - aws deploy wait deployment-successful --deployment-id $deploymentId --region us-east-1
      - echo "Deployment finished"

         #DAST
      - cd rapid7/bin
      - python3 main.py & PYTHON_PID=$!; tail -f ../log/scan_automation.log & TAIL_PID=$!; wait $PYTHON_PID; kill $TAIL_PID
 
artifacts:
  files: build_artifacts/*
  discard-paths: yes
