AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a CI/CD pipeline for EC2.

Parameters:
  GitHubRepo:
    Type: String
    Description: The GitHub repository **Mandatory field
    AllowedPattern: ".+"

  GitHubBranch:
    Type: String
    Description: The GitHub branch name to deploy **Mandatory field
    AllowedPattern: ".+"

  GitHubUser:
    Type: String
    Description: The GitHub Org Name **Mandatory field
    AllowedPattern: ".+"
    #Default: "MatsonInc"

  CodeArtifactRepository:
    Type: String
    Description: The Codeartifact Repository used to Build&deploy application **Mandatory field
    AllowedPattern: ".+"

  CodeBuildEnvironmentType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type **Mandatory field

  CodeBuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type **Mandatory field

  CodeBuildImage:
    Type: String
    Default: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
    Description: The build image

  labAccountId:
    Type: String
    Description: Account ID for matsonlabs
    AllowedPattern: ".+"
  #  Default: 11111111

  # devAccountId:
  #   Type: String
  #   Description: Account ID for dev
  #   AllowedPattern: ".+"
  #   # Default: 1111111

  # PreprodAccountId:
  #   Type: String
  #   Description: Account ID for Preprod
  #   AllowedPattern: ".+"
  #   # Default: 111111111

  # ProdAccountId:
  #   Type: String
  #   Description: Account ID for Prod
  #    AllowedPattern: ".+"
  #   Default: 111111

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Config"
        Parameters:
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
      - Label:
          default: "CodeBuild Config"
        Parameters:
          - CodeBuildEnvironmentType
          - CodeBuildComputeType
          - CodeBuildImage
      - Label:
          default: "Account Config"
        Parameters:
          - labAccountId
          # - devMatsonAccountId
    ParameterLabels:
      GitHubUser:
        default: GitHub User Name
      GitHubRepo:
        default: GitHub Repo Name
      GitHubBranch:
        default: GitHub Repo Branch Name
      GitHubToken:
        default: GitHub Personal Access Token
      CodeBuildEnvironmentType:
        default: CodeBuild Type
      CodeBuildComputeType:
        default: CodeBuild Instance Type
      CodeBuildImage:
        default: CodeBuild image
      labAccountId:
        default: Account ID for  AWS Lab Env
      # devMatsonAccountId:
      #   default: Account ID for  AWS dev Env

Resources:

  # NotificationPPSNSTopic:
  #   Type: 'AWS::SNS::Topic'
  #   Properties:
  #     DisplayName: 'Matson-sns-for-manual-approval-notification'
  #     TopicName: !Sub ${AWS::StackName}-Approval-PP

  # NotificationProdSNSTopic:
  #   Type: 'AWS::SNS::Topic'
  #   Properties:
  #     DisplayName: 'Matson-sns-for-manual-approval-notification'
  #     TopicName: !Sub ${AWS::StackName}-Approval-Prod

  GitHubCodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub ${AWS::StackName}-Connection
      ProviderType: GitHub

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      RoleName: !Sub ${AWS::StackName}-codebuild-role
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-codebuild-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*/*"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${GitHubRepo}/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub arn:aws:s3:::${AWS::StackName}/*
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: # cross-account deploy roles
                  - !Sub arn:aws:iam::${labAccountId}:role/${AWS::StackName}-deployer-role
                  # - !Sub arn:aws:iam::${devAccountId}:role/${AWS::StackName}-deployer-role
                  # - !Sub arn:aws:iam::${PreprodAccountId}:role/${AWS::StackName}-deployer-role
                  # - !Sub arn:aws:iam::${ProdAccountId}:role/${AWS::StackName}-deployer-role 
              - Effect: Allow
                Action:
                  - sts:GetServiceBearerToken
                  - codeartifact:List*
                  - codeartifact:Describe*
                  - codeartifact:ReadFromRepository
                  - codeartifact:Get*
                Resource:
                  - "*"
              # - Effect: Allow
              #   Action:
              #     - codeartifact:PublishPackageVersion
              #     - codeartifact:PutPackageMetadata
              #   Resource:
              #     - !Sub arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:package/matson/${CodeArtifactRepository}/*
              # - Effect: Allow
              #   Action:
              #     - s3:GetObject
              #     - s3:GetObjectVersion
              #     - s3:GetBucketAcl
              #     - s3:GetBucketLocation
              #     - s3:ListBucket
              #   Resource:
              #     - arn:aws:s3:::cicd-configuration
              #     - arn:aws:s3:::cicd-configuration/*

  MatsonCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      RoleName: !Sub ${AWS::StackName}-role
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  # - !GetAtt CodeBuild.Arn
                  - !GetAtt CodeBuildDeployLab.Arn
                  - !GetAtt SASTStage.Arn
                  - !GetAtt DASTStage.Arn
                  # - !GetAtt CodeBuildDeployDev.Arn
                  # - !GetAtt CodeBuildDeployPP.Arn
                  # - !GetAtt CodeBuildDeployProd.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  - !Ref GitHubCodeStarConnection
              - Effect: Allow
                Action:
                  - s3:Put*
                  - s3:Get*
                Resource:
                  - !Sub "arn:aws:s3:::${AWS::StackName}/*"
              # - Effect: Allow
              #   Action:
              #     - sns:Publish
              #   Resource:
              #     - !Ref NotificationPPSNSTopic
                  # - !Ref NotificationProdSNSTopic

  #
  # pipeline bucket
  #
  codePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${AWS::StackName}-lifecycle-policy
            Status: Enabled
            Prefix: !Sub "${AWS::StackName}/SourceArti/"
            Transition:
              StorageClass: INTELLIGENT_TIERING
              TransitionInDays: 30
            ExpirationInDays: 300

  SASTStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: "${AWS::StackName}-SAST-Stage"
      Description: SAST Analaysis
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: aws/infra/DevSecOps/SAST/buildspec.yml
      TimeoutInMinutes: 40
      Environment:
        Type: !Ref CodeBuildEnvironmentType
        ComputeType: !Ref CodeBuildComputeType
        Image: !Sub ${CodeBuildImage}
        EnvironmentVariables:
          - Name: STAGE
            Value: "SAST"
          - Name: static_scan
            Value: "yes"

  CodeBuildDeployLab:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: "${AWS::StackName}-build-lab"
      Description: Deploy to Lab
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-lab.yml
      TimeoutInMinutes: 40
      Environment:
        Type: !Ref CodeBuildEnvironmentType
        ComputeType: !Ref CodeBuildComputeType
        Image: !Sub ${CodeBuildImage}
        EnvironmentVariables:
          - Name: STAGE
            Value: "lab"
          - Name: CROSS_ACCOUNT_S3_BUCKET
            Value: !Sub ${AWS::StackName}-lab
          - Name: account
            Value: "Lab"
          - Name: CICD_CONFIG_PATH
            Value: "s3://cicd-configuration/"
          - Name: CROSS_ACCOUNT_S3_BUCKET_PATH
            Value: !Sub s3://${AWS::StackName}-lab

  # CodeBuildDeployDev:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name:
  #       Fn::Sub: "${AWS::StackName}-build-dev"
  #     Description: Deploy CodeBuildDeploy to Dev
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: buildspec-dev.yml
  #     TimeoutInMinutes: 40
  #     Environment:
  #       Type: !Ref CodeBuildEnvironmentType
  #       ComputeType: !Ref CodeBuildComputeType
  #       Image: !Sub ${CodeBuildImage}
  #       EnvironmentVariables:
  #         - Name: STAGE
  #           Value: "dev"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET
  #           Value: !Sub ${AWS::StackName}-dev
  #         - Name: CICD_CONFIG_PATH
  #           Value: "s3://cicd-configuration/"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET_PATH
  #           Value: !Sub s3://${AWS::StackName}-dev

  DASTStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: "${AWS::StackName}-DAST-Stage"
      Description: SAST Analaysis
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: aws/infra/DevSecOps/DAST/buildspec.yml
      TimeoutInMinutes: 40
      Environment:
        Type: !Ref CodeBuildEnvironmentType
        ComputeType: !Ref CodeBuildComputeType
        Image: !Sub ${CodeBuildImage}
        EnvironmentVariables:
          - Name: STAGE
            Value: "DAST"
          - Name: dynamic_scan
            Value: "yes"

  # CodeBuildDeployPP:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name:
  #       Fn::Sub: "${AWS::StackName}-build-PP"
  #     Description: Deploy CodeBuildDeploy to Preprod
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: buildspec-pp.yml
  #     TimeoutInMinutes: 40
  #     Environment:
  #       Type: !Ref CodeBuildEnvironmentType
  #       ComputeType: !Ref CodeBuildComputeType
  #       Image: !Sub ${CodeBuildImage}
  #       EnvironmentVariables:
  #         - Name: STAGE
  #           Value: "preprod"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET
  #           Value: !Sub ${AWS::StackName}-pp
  #         - Name: CICD_CONFIG_PATH
  #           Value: "s3://cicd-configuration/"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET_PATH
  #           Value: !Sub s3://${AWS::StackName}-pp

  # CodeBuildDeployProd:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name:
  #       Fn::Sub: "${AWS::StackName}-build-Prod"
  #     Description: Deploy CodeBuildDeploy to Production
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: buildspec-prod.yml
  #     TimeoutInMinutes: 40
  #     Environment:
  #       Type: !Ref CodeBuildEnvironmentType
  #       ComputeType: !Ref CodeBuildComputeType
  #       Image: !Sub ${CodeBuildImage}
  #       EnvironmentVariables:
  #         - Name: STAGE
  #           Value: "prod"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET
  #           Value: !Sub ${AWS::StackName}-prod
  #         - Name: CICD_CONFIG_PATH
  #           Value: "s3://cicd-configuration/"
  #         - Name: CROSS_ACCOUNT_S3_BUCKET_PATH
  #           Value: !Sub s3://${AWS::StackName}-prod

  #
  # pipeline
  #
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      RoleArn: !GetAtt MatsonCodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref codePipelineBucket
      Stages:
        - Name: Source-stage
          Actions:
            - Name: Github
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                ConnectionArn: !Ref GitHubCodeStarConnection
                FullRepositoryId: !Sub "${GitHubUser}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
              RunOrder: 1
        - Name: SAST-stage
          Actions:
            - Name: Static-Scan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: StaticArtifacts
              Configuration:
                ProjectName: !Ref SASTStage
                EnvironmentVariables: '[{"name":"doStaticScan","value":"No","type":"PLAINTEXT"}]'
              RunOrder: 1
        # - Name: Build-stage
        #   Actions:
        #     - Name: Building-Application
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Version: "1"
        #         Provider: CodeBuild
        #       InputArtifacts:
        #         - Name: SourceArtifacts
        #       OutputArtifacts:
        #         - Name: BuildArtifacts
        #       Configuration:
        #         ProjectName: !Ref CodeBuild
        #       RunOrder: 1
        - Name: Labs-stage
          Actions:
            - Name: Deploy-to-MatsonLabs
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: StaticArtifacts
              OutputArtifacts:
                - Name: LabDeploymentArtifacts
              Configuration:
                ProjectName: !Ref CodeBuildDeployLab
              RunOrder: 1
        # - Name: Dev-stage
        #   Actions:
        #     - Name: Deploy-to-Dev
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Version: "1"
        #         Provider: CodeBuild
        #       InputArtifacts:
        #         - Name: BuildArtifacts
        #       OutputArtifacts:
        #         - Name: DevDeploymentArtifacts
        #       Configuration:
        #         ProjectName: !Ref CodeBuildDeployDev
        #       RunOrder: 1
        # - Name: Approval-stage-pp
        #   Actions:
        #     - Name: Approval-to-pp
        #       ActionTypeId:
        #         Category: Approval
        #         Owner: AWS
        #         Version: "1"
        #         Provider: Manual
        #       Configuration:
        #         NotificationArn: !Ref NotificationPPSNSTopic
        #         CustomData: "PP - PreProd deployment Pending Approval"
        #       RunOrder: 1
        # - Name: Preprod-stage
        #   Actions:
        #     - Name: Deploy-to-preprod
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Version: "1"
        #         Provider: CodeBuild
        #       InputArtifacts:
        #         - Name: BuildArtifacts
        #       OutputArtifacts:
        #         - Name: PreprodDeploymentArtifacts
        #       Configuration:
        #         ProjectName: !Ref CodeBuildDeployPP
        #       RunOrder: 1
        - Name: DAST-stage
          Actions:
            - Name: Dynamic-Scan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: StaticArtifacts
              OutputArtifacts:
                - Name: DynamicArtifacts
              Configuration:
                ProjectName: !Ref DASTStage
                EnvironmentVariables: '[{"name":"doDASTScan","value":"Yes","type":"PLAINTEXT"}]'
              RunOrder: 1
        # - Name: Approval-stage-prod
        #   Actions:
        #     - Name: Approval-to-prod
        #       ActionTypeId:
        #         Category: Approval
        #         Owner: AWS
        #         Version: "1"
        #         Provider: Manual
        #       Configuration:
        #         NotificationArn: !Ref NotificationProdSNSTopic
        #         CustomData: "Prod - Production deployment Pending Approval"
        #       RunOrder: 1
        # - Name: Prod-stage
        #   Actions:
        #     - Name: Deploy-to-prod
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Version: "1"
        #         Provider: CodeBuild
        #       InputArtifacts:
        #         - Name: BuildArtifacts
        #       OutputArtifacts:
        #         - Name: ProdDeploymentArtifacts
        #       Configuration:
        #         ProjectName: !Ref CodeBuildDeployProd
        #       RunOrder: 1

Outputs:
  CodeStarGithubConnectionARN:
    Description: Connection ARN for the Codestar connection
    Value: !Ref GitHubCodeStarConnection
